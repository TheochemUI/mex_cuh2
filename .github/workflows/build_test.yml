name: Run MATLAB Tests on GitHub-Hosted Runner
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  mextest:
    name: Run MATLAB Tests and Generate Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1

      - name: Build shared library
        env:
          ROOT_PATH: ${{ github.workspace }}
        run: |
          gfortran -shared -fPIC -o libcuH2Fort.so src/fortran/eam_isoc.f90 src/fortran/eamroutines.f90
          mex -I$ROOT_PATH -L$ROOT_PATH -lcuH2Fort src/cuh2_mex.c

      - name: Run tests and generate artifacts
        uses: matlab-actions/run-tests@v1
        env:
          LD_LIBRARY_PATH: ${{ github.workspace }}
        with:
          test-results-junit: test-results/results.xml
          code-coverage-cobertura: code-coverage/coverage.xml

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: code-coverage/coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'test-results/results.xml'
